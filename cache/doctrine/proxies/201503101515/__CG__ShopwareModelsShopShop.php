<?php

namespace Shopware\Proxies\__CG__\Shopware\Models\Shop;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Shop extends \Shopware\Models\Shop\Shop implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'mainId', 'categoryId', 'main', 'name', 'title', 'position', 'host', 'basePath', 'baseUrl', 'hosts', 'secure', 'alwaysSecure', 'secureHost', 'secureBasePath', 'secureBaseUrl', 'template', 'documentTemplate', 'category', 'locale', 'currency', 'customerGroup', 'default', 'active', 'fallback', 'customerScope', 'currencies', 'pages', 'children');
        }

        return array('__isInitialized__', 'id', 'mainId', 'categoryId', 'main', 'name', 'title', 'position', 'host', 'basePath', 'baseUrl', 'hosts', 'secure', 'alwaysSecure', 'secureHost', 'secureBasePath', 'secureBaseUrl', 'template', 'documentTemplate', 'category', 'locale', 'currency', 'customerGroup', 'default', 'active', 'fallback', 'customerScope', 'currencies', 'pages', 'children');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Shop $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', array());

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', array($position));

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getHost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHost', array());

        return parent::getHost();
    }

    /**
     * {@inheritDoc}
     */
    public function setHost($host)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHost', array($host));

        return parent::setHost($host);
    }

    /**
     * {@inheritDoc}
     */
    public function getBasePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBasePath', array());

        return parent::getBasePath();
    }

    /**
     * {@inheritDoc}
     */
    public function setBasePath($basePath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBasePath', array($basePath));

        return parent::setBasePath($basePath);
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseUrl', array());

        return parent::getBaseUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setBaseUrl($baseUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBaseUrl', array($baseUrl));

        return parent::setBaseUrl($baseUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getHosts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHosts', array());

        return parent::getHosts();
    }

    /**
     * {@inheritDoc}
     */
    public function setHosts($hosts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHosts', array($hosts));

        return parent::setHosts($hosts);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplate', array());

        return parent::getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplate($template)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplate', array($template));

        return parent::setTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentTemplate', array());

        return parent::getDocumentTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocumentTemplate($documentTemplate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocumentTemplate', array($documentTemplate));

        return parent::setDocumentTemplate($documentTemplate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocale', array());

        return parent::getLocale();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocale', array($locale));

        return parent::setLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', array());

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', array($currency));

        return parent::setCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomerGroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomerGroup', array());

        return parent::getCustomerGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomerGroup($customerGroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomerGroup', array($customerGroup));

        return parent::setCustomerGroup($customerGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefault()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefault', array());

        return parent::getDefault();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefault($default)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefault', array($default));

        return parent::setDefault($default);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrencies()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrencies', array());

        return parent::getCurrencies();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrencies($currencies)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrencies', array($currencies));

        return parent::setCurrencies($currencies);
    }

    /**
     * {@inheritDoc}
     */
    public function getMain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMain', array());

        return parent::getMain();
    }

    /**
     * {@inheritDoc}
     */
    public function setMain($main)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMain', array($main));

        return parent::setMain($main);
    }

    /**
     * {@inheritDoc}
     */
    public function getSecure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSecure', array());

        return parent::getSecure();
    }

    /**
     * {@inheritDoc}
     */
    public function setSecure($secure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSecure', array($secure));

        return parent::setSecure($secure);
    }

    /**
     * {@inheritDoc}
     */
    public function getSecureHost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSecureHost', array());

        return parent::getSecureHost();
    }

    /**
     * {@inheritDoc}
     */
    public function setSecureHost($secureHost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSecureHost', array($secureHost));

        return parent::setSecureHost($secureHost);
    }

    /**
     * {@inheritDoc}
     */
    public function getSecureBasePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSecureBasePath', array());

        return parent::getSecureBasePath();
    }

    /**
     * {@inheritDoc}
     */
    public function setSecureBasePath($secureBasePath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSecureBasePath', array($secureBasePath));

        return parent::setSecureBasePath($secureBasePath);
    }

    /**
     * {@inheritDoc}
     */
    public function getSecureBaseUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSecureBaseUrl', array());

        return parent::getSecureBaseUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setSecureBaseUrl($secureBaseUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSecureBaseUrl', array($secureBaseUrl));

        return parent::setSecureBaseUrl($secureBaseUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getFallback()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFallback', array());

        return parent::getFallback();
    }

    /**
     * {@inheritDoc}
     */
    public function setFallback($fallback)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFallback', array($fallback));

        return parent::setFallback($fallback);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomerScope()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomerScope', array());

        return parent::getCustomerScope();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomerScope($customerScope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomerScope', array($customerScope));

        return parent::setCustomerScope($customerScope);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', array());

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildren($children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildren', array($children));

        return parent::setChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function getPages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPages', array());

        return parent::getPages();
    }

    /**
     * {@inheritDoc}
     */
    public function setPages($pages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPages', array($pages));

        return parent::setPages($pages);
    }

    /**
     * {@inheritDoc}
     */
    public function get($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get', array($name));

        return parent::get($name);
    }

    /**
     * {@inheritDoc}
     */
    public function registerResources(\Enlight_Bootstrap $bootstrap)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'registerResources', array($bootstrap));

        return parent::registerResources($bootstrap);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlwaysSecure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlwaysSecure', array());

        return parent::getAlwaysSecure();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlwaysSecure($alwaysSecure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlwaysSecure', array($alwaysSecure));

        return parent::setAlwaysSecure($alwaysSecure);
    }

    /**
     * {@inheritDoc}
     */
    public function fromArray(array $array = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fromArray', array($array));

        return parent::fromArray($array);
    }

    /**
     * {@inheritDoc}
     */
    public function setOneToOne($data, $model, $property, $reference = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOneToOne', array($data, $model, $property, $reference));

        return parent::setOneToOne($data, $model, $property, $reference);
    }

    /**
     * {@inheritDoc}
     */
    public function setOneToMany($data, $model, $property, $reference = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOneToMany', array($data, $model, $property, $reference));

        return parent::setOneToMany($data, $model, $property, $reference);
    }

    /**
     * {@inheritDoc}
     */
    public function setManyToOne($data, $model, $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManyToOne', array($data, $model, $property));

        return parent::setManyToOne($data, $model, $property);
    }

}
